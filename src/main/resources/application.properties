# ================================================
#                   Tomcat配置
# ================================================
server.port=8080
#打印更详细日志
#debug=true
# ================================================
#               ## 默认编码配置
# ================================================
spring.http.encoding.charset=UTF-8
spring.http.encoding.force=true
spring.http.encoding.enabled=true
server.tomcat.uri-encoding=UTF-8

# ================================================
#                  ##数据库连接池
# ================================================
spring.datasource.url=jdbc:mysql://192.168.1.202:3306/platform?useUnicode=true&characterEncoding=UTF-8&zeroDateTimeBehavior=convertToNull
spring.datasource.username=root
spring.datasource.password=pz-123456
spring.datasource.driver-class-name=com.mysql.jdbc.Driver
# 初始化大小，最小，最大配置
spring.datasource.druid.initial-size=5
spring.datasource.druid.min-idle=5
spring.datasource.druid.max-active=20
# 配置获取连接等待超时的时间
spring.datasource.druid.max-wait=60000
# 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒
spring.datasource.druid.time-between-eviction-runs-millis=60000
# 配置一个连接在池中最小生存的时间，单位是毫秒
spring.datasource.druid.min-evictable-idle-time-millis=300000
spring.datasource.druid.validation-query=SELECT 1 FROM DUAL

# ================================================
#                 ## MyBatis相关配置
# ================================================
mybatis.type-aliases-package=com.springboot.lipeng.model.*
#mybatis.mapper-locations=classpath:mapper/*.xml
mybatis.mapper-locations=classpath:mapper/*/*.xml,classpath:mapper/test/*.xml,classpath:mapper/*.xml
#支持下划线到驼峰命名
mybatis.configuration.map-underscore-to-camel-case=true
#返回map时空值也返回字段
mybatis.configuration.call-setters-on-nulls=true
#开启MyBatis的二级缓存
#mybatis.configuration.cache-enabled=true

# ================================================
#                 ## Thymeleaf模板引擎配置
# ================================================
#spring.mvc.view.prefix=/templates
#spring.mvc.view.suffix=.ftl
# 是否使用缓存，开发阶段最填false，方便使用ctrl+shift+F9 进行重新编译，无需重启服务
spring.thymeleaf.cache=false
# 检查该模板是否存在
spring.thymeleaf.check-template-location=true
# 模板中内容的类型
spring.thymeleaf.servlet.content-type=text/html
# 启动 MVC 对Thymeleaf 视图的解析
spring.thymeleaf.enabled=true
# 模板的字符集
spring.thymeleaf.encoding=UTF-8
# 从解析中排除的视图名称的逗号分隔列表，没有的话就空咯
spring.thymeleaf.excluded-view-names=
# 使用的是什么类型模板
spring.thymeleaf.mode=HTML5
# 在构建URL时可以预览查看名称的前缀。就是路径在哪
spring.thymeleaf.prefix=classpath:/templates/
# 在构建URL时附加到视图名称的后缀。就是我们用rest风格，不同加文件后缀名。自己加上去
spring.thymeleaf.suffix=.html

#设定静态文件路径，js,css等
spring.mvc.static-path-pattern=/static/**

# ================================================
#               ## Redis配置
# ================================================
spring.cache.type=REDIS
# REDIS (RedisProperties)
# Redis数据库索引（默认为0）
spring.redis.database=0
# Redis服务器地址
spring.redis.host=127.0.0.1
# Redis服务器连接端口
spring.redis.port=6379
# 连接池最大连接数（使用负值表示没有限制）
spring.redis.jedis.pool.max-active=-1
# 连接池最大阻塞等待时间（使用负值表示没有限制）
spring.redis.jedis.pool.max-wait=-1
# 连接池中的最大空闲连接
spring.redis.jedis.pool.max-idle=8
# 连接池中的最小空闲连接
spring.redis.jedis.pool.min-idle=0
# 连接超时时间（毫秒）
spring.redis.timeout=5000

# ================================================
#                   日志
# ================================================
#指定logback配置文件的位置
logging.config=classpath:logback-spring.xml
logging.path=c:/lipeng/log
#TRACE < DEBUG < INFO < WARN < ERROR < FATAL 设置某个级别,则小于它的不会记录在日志中,默认是INFO
#设置"com.springboot.lipeng"这个包下的所有class级别为"DEBUG"(所有class类大于或等于debug级别的日志都会被记录)
logging.level.com.springboot.lipeng = DEBUG 
